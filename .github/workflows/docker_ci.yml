# name: ci

# on:
#   pull_request:
#     types: [opened, reopened, synchronize]
  
# jobs:
#   docker:
#     name: Run Tests
#     runs-on: ubuntu-latest
#     timeout-minutes: 10
#     steps:
#       - 
#         name: Checkout
#         uses: actions/checkout@v4
#       -
#         name: Set up QEMU
#         uses: docker/setup-qemu-action@v3
#       -
#         name: Set up Docker Buildx
#         uses: docker/setup-buildx-action@v3
#       - 
#         name: Login to DockerHub
#         uses: docker/login-action@v3
#         with:
#           username: ${{ secrets.DOCKER_HUB_USERNAME }}
#           password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
#       - 
#         name: Build and push  
#         id: docker_build
#         uses: docker/build-push-action@v6
#         with:
#           file: docker/app/Dockerfile
#           context: .
#           push: False
#           tags: bengotch/drf:latest
#           cache-from: type=local,src=/tmp/.buildx-cache
#           cache-to: type=local,dest=/tmp/.buildx-cache
#       -
#         name: Cache Docker layers
#         uses: actions/cache@v3
#         with:
#           path: /tmp/.buildx-cache
#           key: ${{ runner.os }}-buildx-${{ github.sha }}
#           restore-keys: |
#             ${{ runner.os }}-buildx-
  
#   test:
#     name: Run Tests
#     runs-on: ubuntu-latest
#     needs: docker
#     container: drf
#     timeout-minutes: 10

#     steps:
#       - name: Checkout
#         uses: actions/checkout@v4

#       - name: Python Setup
#         uses: actions/setup-python@v5
#         with:
#           python-version: 3.12
      
#       - name: Poetry setup
#         uses: Gr1N/setup-poetry@v9

#       - name: Run poetry install
#         run: poetry install

#       - name: Run pytest
#         env:
#           PYTHONPATH: ${{ github.workspace }}/src
#           DJANGO_SETTINGS_MODULE: mysite.settings.local
#           SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
#         run: |
#           poetry run pytest src/mysite/appxxx/tests/

#   coverage:
#     name: Coverage Report
#     timeout-minutes: 10
#     needs: test 
#     container: drf
#     runs-on: ubuntu-latest
  
#     steps:
#       - name: Checkout
#         uses: actions/checkout@v4

#       - name: Python Setup
#         uses: actions/setup-python@v5
#         with:
#           python-version: 3.12
      
#       - name: Poetry setup
#         uses: Gr1N/setup-poetry@v9

#       - name: Run poetry install
#         run: poetry install

#       - name: run pytest
#         run: poetry run pytest --junitxml=pytest.xml \
#                               --cov-report=term-missing \
#                               --cov=src | tee pytest-coverage.txt

#       - name: Check coverage
#         run: |
#           coverage_rate=$(poetry run pytest --cov=src / --cov-report=term-missing | grep TOTAL | awk '{print $4}' | sed 's/%//')

                        
#       - name: Pytest coverage comment
#         uses: MishaKav/pytest-coverage-comment@v1.1.47
#         with:
#           pytest-coverage-path: ./pytest-coverage.txt
#           junitxml-path: ./pytest.xml